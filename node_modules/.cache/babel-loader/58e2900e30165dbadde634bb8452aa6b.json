{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/Context/index.js\";\nimport React, { useState } from 'react';\nexport const TictactoeContext = React.createContext();\nexport const Provider = props => {\n  const [start, setStart] = useState(false);\n  const [readyToPlay, setReadyToPlay] = useState(false);\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(\"\");\n\n  const handleInput = event => {\n    if (event.target.id === \"player1\") {\n      setPlayer1(Number(event.target.value));\n    } else if (event.target.id === \"player2\") {\n      setPlayer2(Number(event.target.value));\n    }\n  };\n\n  const onClickStartButton = event => {\n    event.preventDefault();\n\n    if (player1 && player2) {\n      setReadyToPlay(true);\n    } else {\n      alert(\"You must have 2 players to start the game!\");\n    }\n  };\n\n  const onClickNewGameButton = () => {\n    setReadyToPlay(false);\n    setPlayer1(\"\");\n    setPlayer2(\"\");\n  };\n\n  const startButton = () => {\n    setStart(true);\n  };\n\n  return /*#__PURE__*/React.createElement(TictactoeContext.Provider, {\n    value: {\n      start,\n      readyToPlay,\n      player1,\n      player2,\n      actions: {\n        onClickStartButton: onClickStartButton,\n        handleInput: handleInput,\n        onClickNewGameButton: onClickNewGameButton,\n        startButton: startButton\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport const Consumer = TictactoeContext.Consumer;","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/Context/index.js"],"names":["React","useState","TictactoeContext","createContext","Provider","props","start","setStart","readyToPlay","setReadyToPlay","player1","setPlayer1","player2","setPlayer2","handleInput","event","target","id","Number","value","onClickStartButton","preventDefault","alert","onClickNewGameButton","startButton","actions","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,aAAN,EAAzB;AACP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAEjC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAEO,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEW,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,SAAxB,EAAmC;AACjCN,MAAAA,UAAU,CAACO,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAP,CAAV;AACD,KAFD,MAEO,IAAIJ,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,SAAxB,EAAmC;AACxCJ,MAAAA,UAAU,CAACK,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaG,KAAd,CAAP,CAAV;AACD;AACF,GAND;;AAQA,QAAMC,kBAAkB,GAAIL,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACM,cAAN;;AACA,QAAIX,OAAO,IAAIE,OAAf,EAAwB;AACtBH,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO;AACLa,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,oBAAoB,GAAG,MAAM;AACjCd,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,QAAMW,WAAW,GAAG,MAAM;AACxBjB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAKA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAChCD,MAAAA,KADgC;AAEhCE,MAAAA,WAFgC;AAGhCE,MAAAA,OAHgC;AAIhCE,MAAAA,OAJgC;AAKhCa,MAAAA,OAAO,EAAE;AACPL,QAAAA,kBAAkB,EAAEA,kBADb;AAEPN,QAAAA,WAAW,EAAEA,WAFN;AAGPS,QAAAA,oBAAoB,EAAEA,oBAHf;AAIPC,QAAAA,WAAW,EAAEA;AAJN;AALuB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYInB,KAAK,CAACqB,QAZV,CADF;AAiBD,CApDM;AAsDP,OAAO,MAAMC,QAAQ,GAAGzB,gBAAgB,CAACyB,QAAlC","sourcesContent":["import React, { useState } from 'react';\n\nexport const TictactoeContext = React.createContext();\nexport const Provider = (props) => {\n  \n  const [ start, setStart ] = useState(false);\n  const [ readyToPlay, setReadyToPlay ] = useState(false);\n  const [ player1, setPlayer1 ] = useState(\"\");\n  const [ player2, setPlayer2 ] = useState(\"\");\n\n  const handleInput = (event) => {\n    if (event.target.id === \"player1\") {\n      setPlayer1(Number(event.target.value));\n    } else if (event.target.id === \"player2\") {\n      setPlayer2(Number(event.target.value));\n    }\n  } \n\n  const onClickStartButton = (event) => {\n    event.preventDefault();\n    if (player1 && player2) {\n      setReadyToPlay(true);\n    } else {\n      alert(\"You must have 2 players to start the game!\");\n    }\n  }\n\n  const onClickNewGameButton = () => {\n    setReadyToPlay(false);\n    setPlayer1(\"\");\n    setPlayer2(\"\");\n  }\n\n  const startButton = () => {\n    setStart(true);\n  }\n\n\n  return (\n    <TictactoeContext.Provider value={{\n      start,\n      readyToPlay,\n      player1,      \n      player2,\n      actions: {\n        onClickStartButton: onClickStartButton,\n        handleInput: handleInput,\n        onClickNewGameButton: onClickNewGameButton,\n        startButton: startButton      \n      }\n    }}>\n      { props.children }\n    </TictactoeContext.Provider>\n  );\n  \n}\n\nexport const Consumer = TictactoeContext.Consumer;"]},"metadata":{},"sourceType":"module"}