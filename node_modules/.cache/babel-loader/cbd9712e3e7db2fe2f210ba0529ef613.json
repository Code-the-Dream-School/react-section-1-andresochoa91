{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/Context/index.js\";\n// import React, { Component } from 'react';\nimport React, { useState } from 'react';\nexport const TictactoeContext = React.createContext(); // export class Provider extends Component {\n// state = {\n//   start: false,\n//   readyToPlay: false,\n//   player1: \"\",\n//   player2: \"\"\n// }\n\nexport const Provider = props => {\n  const [start, setStart] = useState(false);\n  const [readyToPlay, setReadyToPlay] = useState(false);\n  const [player1, setPlayer1] = useState(\"\");\n  const [player2, setPlayer2] = useState(\"\");\n\n  const handleInput = e => {\n    if (e.target.id === \"player1\") {\n      setPlayer1(e.target.value);\n    } else if (e.target.id === \"player2\") {\n      setPlayer2(e.target.value);\n    }\n  };\n\n  const onClickStartButton = event => {\n    event.preventDefault();\n\n    if (player1 && player2) {\n      setReadyToPlay(true);\n    } else {\n      alert(\"You must have 2 players to start the game!\");\n    }\n  };\n\n  const onClickNewGameButton = () => {\n    setReadyToPlay(false);\n    setPlayer1(\"\");\n    setPlayer2(\"\");\n  };\n\n  const startButton = () => {\n    setStart(true);\n  };\n\n  return /*#__PURE__*/React.createElement(TictactoeContext.Provider, {\n    value: {\n      start,\n      readyToPlay,\n      player1,\n      player2,\n      actions: {\n        onClickStartButton: onClickStartButton,\n        handleInput: handleInput,\n        onClickNewGameButton: onClickNewGameButton,\n        startButton: startButton\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/Context/index.js"],"names":["React","useState","TictactoeContext","createContext","Provider","props","start","setStart","readyToPlay","setReadyToPlay","player1","setPlayer1","player2","setPlayer2","handleInput","e","target","id","value","onClickStartButton","event","preventDefault","alert","onClickNewGameButton","startButton","actions","children"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,aAAN,EAAzB,C,CAEP;AAEE;AACA;AACA;AACA;AACA;AACA;;AACF,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAEjC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAEO,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEW,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7BN,MAAAA,UAAU,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAAV;AACD,KAFD,MAEO,IAAIH,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,SAApB,EAA+B;AACpCJ,MAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASE,KAAV,CAAV;AACD;AACF,GAND;;AAQA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIX,OAAO,IAAIE,OAAf,EAAwB;AACtBH,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO;AACLa,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;AACF,GAPD;;AASA,QAAMC,oBAAoB,GAAG,MAAM;AACjCd,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,QAAMW,WAAW,GAAG,MAAM;AACxBjB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAKA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAChCD,MAAAA,KADgC;AAEhCE,MAAAA,WAFgC;AAGhCE,MAAAA,OAHgC;AAIhCE,MAAAA,OAJgC;AAKhCa,MAAAA,OAAO,EAAE;AACPN,QAAAA,kBAAkB,EAAEA,kBADb;AAEPL,QAAAA,WAAW,EAAEA,WAFN;AAGPS,QAAAA,oBAAoB,EAAEA,oBAHf;AAIPC,QAAAA,WAAW,EAAEA;AAJN;AALuB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYInB,KAAK,CAACqB,QAZV,CADF;AAiBD,CApDM","sourcesContent":["// import React, { Component } from 'react';\nimport React, { useState } from 'react';\n\nexport const TictactoeContext = React.createContext();\n\n// export class Provider extends Component {\n\n  // state = {\n  //   start: false,\n  //   readyToPlay: false,\n  //   player1: \"\",\n  //   player2: \"\"\n  // }\nexport const Provider = (props) => {\n  \n  const [ start, setStart ] = useState(false);\n  const [ readyToPlay, setReadyToPlay ] = useState(false);\n  const [ player1, setPlayer1 ] = useState(\"\");\n  const [ player2, setPlayer2 ] = useState(\"\");\n\n  const handleInput = (e) => {\n    if (e.target.id === \"player1\") {\n      setPlayer1(e.target.value);\n    } else if (e.target.id === \"player2\") {\n      setPlayer2(e.target.value);\n    }\n  } \n\n  const onClickStartButton = (event) => {\n    event.preventDefault();\n    if (player1 && player2) {\n      setReadyToPlay(true);\n    } else {\n      alert(\"You must have 2 players to start the game!\");\n    }\n  }\n\n  const onClickNewGameButton = () => {\n    setReadyToPlay(false);\n    setPlayer1(\"\");\n    setPlayer2(\"\");\n  }\n\n  const startButton = () => {\n    setStart(true);\n  }\n\n\n  return (\n    <TictactoeContext.Provider value={{\n      start,\n      readyToPlay,\n      player1,      \n      player2,\n      actions: {\n        onClickStartButton: onClickStartButton,\n        handleInput: handleInput,\n        onClickNewGameButton: onClickNewGameButton,\n        startButton: startButton      \n      }\n    }}>\n      { props.children }\n    </TictactoeContext.Provider>\n  );\n  \n}"]},"metadata":{},"sourceType":"module"}