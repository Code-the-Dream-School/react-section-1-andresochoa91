{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/components/Cell.js\";\nimport React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { Square } from './Square';\nimport { Consumer } from '../Context'; //Styled components\n\nconst Board = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 216px;\n`;\nconst Button = styled.button` \n  padding: 5px 15px;\n  margin: 30px auto;\n  font-size: 20px;\n  background-color: #3c9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  :hover {\n    background-color: #1a7;\n  }\n`;\nconst Players = styled.div``;\nconst Buttons = styled.div``;\nconst Body = styled.div`\n  ${Players}, ${Buttons} {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\nconst Paragraph = styled.p`\n  font-size: 25px;\n  border: ${props => props.primary} solid 2px;\n  border-radius: 5px;\n  color: ${props => props.primary};\n  padding: 2px 15px;\n`;\nconst Banner = styled.div`\n  background-color: ${props => props.color};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  width: 100px;\n  margin: auto;\n  padding: auto 5px;\n`;\n\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"#6af\",\n      count: 0,\n      playing: true,\n      board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      player: this.props.player1,\n      winner: \"\"\n    };\n\n    this.changeColor = event => {\n      console.log(event);\n      const {\n        player1,\n        player2\n      } = this.props;\n      const {\n        color,\n        playing,\n        board\n      } = this.state;\n\n      if (!board[event.target.id] && playing === true) {\n        const newBoard = [...board];\n        newBoard[event.target.id] = color;\n        this.setState({\n          board: newBoard\n        });\n\n        if (color === \"#6af\") {\n          this.setState({\n            color: \"#f6c\",\n            player: player1\n          });\n        } else {\n          this.setState({\n            color: \"#6af\",\n            player: player2\n          });\n        }\n\n        this.setState(prevState => ({\n          count: prevState.count + 1\n        }));\n      }\n    };\n\n    this.validation = (num1, num2, num3) => {\n      let board = this.state.board;\n      return board[num1] && board[num1] === board[num2] && board[num2] === board[num3];\n    };\n\n    this.conditions = () => {\n      let val = this.validation;\n      return val(0, 1, 2) || val(3, 4, 5) || val(6, 7, 8) || val(0, 3, 6) || val(1, 4, 7) || val(2, 5, 8) || val(0, 4, 8) || val(2, 4, 6);\n    };\n\n    this.restart = () => {\n      this.setState({\n        playing: true,\n        board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n        color: \"#6af\",\n        count: 0,\n        winner: \"\"\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      count,\n      playing,\n      player,\n      player1\n    } = this.state;\n\n    if ((this.conditions() || count === 9) && playing === true) {\n      this.setState({\n        playing: false,\n        player: player1\n      });\n\n      if (this.conditions()) {\n        alert(`${player} wins`);\n        this.setState({\n          winner: player\n        });\n      } else {\n        alert(\"Tie\");\n      }\n    }\n  }\n\n  render() {\n    const {\n      winner,\n      count,\n      color,\n      playing,\n      board\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, context => {\n      const {\n        player1,\n        player2,\n        onClickNewGameButton\n      } = context;\n      return /*#__PURE__*/React.createElement(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, winner && /*#__PURE__*/React.createElement(Banner, {\n        color: \"#1a7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }\n      }, winner, \" wins\"), !winner && count === 9 && /*#__PURE__*/React.createElement(Banner, {\n        color: \"#e69500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }\n      }, \"Tie\"), /*#__PURE__*/React.createElement(Players, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paragraph, {\n        primary: \"#6af\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, player1), color === \"#6af\" && playing && /*#__PURE__*/React.createElement(Banner, {\n        color: \"#e69500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 54\n        }\n      }, \"Your turn\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paragraph, {\n        primary: \"#f6c\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }\n      }, player2), color !== \"#6af\" && playing && /*#__PURE__*/React.createElement(Banner, {\n        color: \"#e69500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 54\n        }\n      }, \"Your turn\"))), /*#__PURE__*/React.createElement(Board, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, board.map((num, i) => /*#__PURE__*/React.createElement(Square, {\n        key: i,\n        id: i,\n        color: num,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Buttons, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.restart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, \"Restart\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: onClickNewGameButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, \"New Game\")));\n    });\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-1-andresochoa91/src/components/Cell.js"],"names":["React","Component","styled","Square","Consumer","Board","div","Content","Button","button","Players","Buttons","Body","Paragraph","p","props","primary","Banner","color","Cell","state","count","playing","board","player","player1","winner","changeColor","event","console","log","player2","target","id","newBoard","setState","prevState","validation","num1","num2","num3","conditions","val","restart","componentDidUpdate","alert","render","context","onClickNewGameButton","map","num","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { Square } from './Square';\nimport { Consumer } from '../Context';\n\n//Styled components\n\nconst Board = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst Content= styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 216px;\n`;\n\nconst Button = styled.button` \n  padding: 5px 15px;\n  margin: 30px auto;\n  font-size: 20px;\n  background-color: #3c9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  :hover {\n    background-color: #1a7;\n  }\n`;\n\nconst Players = styled.div``;\nconst Buttons = styled.div``;\n\nconst Body = styled.div`\n  ${Players}, ${Buttons} {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\n\nconst Paragraph = styled.p`\n  font-size: 25px;\n  border: ${(props) => props.primary} solid 2px;\n  border-radius: 5px;\n  color: ${(props) => props.primary};\n  padding: 2px 15px;\n`;\n\nconst Banner = styled.div`\n  background-color: ${props => props.color};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  width: 100px;\n  margin: auto;\n  padding: auto 5px;\n`;\n\nclass Cell extends Component {\n  state = {\n    color: \"#6af\",\n    count: 0,\n    playing: true,\n    board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    player: this.props.player1,\n    winner: \"\"\n  }\n  \n  changeColor = (event) => {\n    console.log(event)\n    const { player1, player2 } = this.props;\n    const { color, playing, board } = this.state;\n\n    if (!board[event.target.id] && playing === true) {    \n      const newBoard = [...board];\n      newBoard[event.target.id] = color;\n      this.setState({ board: newBoard });\n\n      if (color === \"#6af\") {\n        this.setState({ \n          color: \"#f6c\",\n          player: player1,\n        })  \n      } else {\n        this.setState({ \n          color: \"#6af\",\n          player: player2,\n        })\n      }\n      this.setState( prevState => ({\n         count: prevState.count + 1 \n      }));\n    }\n  }\n\n  componentDidUpdate () {\n    const { count, playing, player, player1 } = this.state;\n    if ((this.conditions() || count === 9) && playing === true) {\n      this.setState({\n        playing: false,\n        player: player1\n      })\n      if (this.conditions()) {\n        alert(`${player} wins`);\n        this.setState({ winner: player })\n      } else {\n        alert(\"Tie\");\n      }\n    } \n  }\n\n  validation = (num1, num2, num3) => {\n    let board = this.state.board;\n    return board[num1] &&\n           board[num1] === board[num2] &&\n           board[num2] === board[num3]\n  }\n  \n  conditions = () => {\n    let val = this.validation;\n    return (val(0, 1, 2) || val(3, 4, 5) || val(6, 7, 8) ||\n            val(0, 3, 6) || val(1, 4, 7) || val(2, 5, 8) ||\n            val(0, 4, 8) || val(2, 4, 6)                   \n    );\n  }\n\n  restart = () => {\n    this.setState({ \n      playing: true,\n      board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      color: \"#6af\",\n      count: 0,\n      winner: \"\"\n    })\n  }\n\n  render() {\n    const { winner, count, color, playing, board } = this.state;\n    return (\n      <Consumer>\n        {context => {\n          const { player1, player2, onClickNewGameButton } = context;\n          return (\n            <Body>\n              { winner && <Banner color=\"#1a7\">{winner} wins</Banner>}\n              { (!winner && count === 9) && <Banner color=\"#e69500\">Tie</Banner>}\n              <Players>\n                <div>\n                  <Paragraph primary=\"#6af\">{ player1 }</Paragraph>\n                  { (color === \"#6af\" && playing) && <Banner color=\"#e69500\">Your turn</Banner> }\n                </div>\n                <div>\n                  <Paragraph primary=\"#f6c\">{ player2 }</Paragraph>\n                  { (color !== \"#6af\" && playing) && <Banner color=\"#e69500\">Your turn</Banner> }\n                </div>\n              </Players>\n              <Board>\n                <Content>\n                  { board.map((num, i) => \n                    <Square \n                      key={ i } \n                      id={ i } \n                      color={ num } \n                      changeColor={ this.changeColor }\n                    />\n                  ) }\n                </Content>  \n              </Board>\n              <Buttons>\n                <Button onClick={ this.restart }>Restart</Button>\n                <Button onClick={ onClickNewGameButton }>New Game</Button>\n              </Buttons>\n            </Body>\n          );\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}