{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/react-section-1-andresochoa91/tictactoe/src/components/Cell.js\";\nimport React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport Square from './Square'; // import { Button } from 'react-bootstrap';\n//Styled components\n\nconst Col = styled.div`\n  border: solid 1px #000;\n  height: 40px;\n  width: 40px;\n  margin: 1px;\n  cursor: pointer;\n`;\nconst Content = styled.div`\n  ${Col}:hover {\n    background-color: #ccc;\n  }\n  display: flex; \n`; // const Row = styled.div`\n//   display: flex;\n// `;\n\nconst Button = styled.button`\n  background-color: ${props => props.primary};\n  border: none;\n  border-radius: 5px;\n  width: 80px;\n  height: 30px;\n`;\n\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"#f00\",\n      count: 0,\n      playing: true,\n      board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n      player: \"Red\"\n    };\n\n    this.changeColor = event => {\n      if (!event.target.style.backgroundColor && this.state.playing === true) {\n        event.target.style.backgroundColor = this.state.color;\n\n        if (this.state.color === \"#f00\") {\n          this.setState({\n            color: \"#0f0\",\n            player: \"Red\"\n          });\n        } else {\n          this.setState({\n            color: \"#f00\",\n            player: \"Green\"\n          });\n        }\n\n        this.setState({\n          board: this.state.board.map((sq, id) => id === Number(event.target.id) ? this.state.color : sq)\n        });\n        this.setState({\n          count: this.state.count + 1\n        });\n      }\n    };\n\n    this.validation = (num1, num2, num3) => {\n      return this.state.board[num1] === this.state.board[num2] && this.state.board[num2] === this.state.board[num3];\n    };\n\n    this.conditions = () => {\n      return this.validation(0, 1, 2) || this.validation(3, 4, 5) || this.validation(6, 7, 8) || this.validation(0, 3, 6) || this.validation(1, 4, 7) || this.validation(2, 5, 8) || this.validation(0, 4, 8) || this.validation(2, 4, 6);\n    };\n\n    this.isEven = number => {\n      return number % 2 === 0;\n    };\n\n    this.restart = () => {\n      for (let i = 0; i < 9; i++) {\n        document.getElementById(i).style.backgroundColor = \"\";\n      }\n\n      this.setState({\n        playing: true\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.conditions() || this.state.count === 9) {\n      if (this.conditions()) {\n        alert(`${this.state.player} wins`);\n      } else {\n        alert(\"Tie\");\n      }\n\n      this.setState({\n        color: \"#f00\",\n        count: 0,\n        playing: false,\n        board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n        player: \"Red\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, this.state.board.map((num, i) => {\n      return /*#__PURE__*/React.createElement(Square, {\n        key: i,\n        id: i,\n        changeColor: this.changeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      primary: this.state.color,\n      onClick: this.restart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Restart\")));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/react-section-1-andresochoa91/tictactoe/src/components/Cell.js"],"names":["React","Component","styled","Square","Col","div","Content","Button","button","props","primary","Cell","state","color","count","playing","board","player","changeColor","event","target","style","backgroundColor","setState","map","sq","id","Number","validation","num1","num2","num3","conditions","isEven","number","restart","i","document","getElementById","componentDidUpdate","alert","render","num"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport Square from './Square';\n// import { Button } from 'react-bootstrap';\n\n//Styled components\nconst Col = styled.div`\n  border: solid 1px #000;\n  height: 40px;\n  width: 40px;\n  margin: 1px;\n  cursor: pointer;\n`;\n\nconst Content= styled.div`\n  ${Col}:hover {\n    background-color: #ccc;\n  }\n  display: flex; \n`;\n\n// const Row = styled.div`\n//   display: flex;\n// `;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.primary};\n  border: none;\n  border-radius: 5px;\n  width: 80px;\n  height: 30px;\n`;\n\nclass Cell extends Component {\n\n  state = {\n    color: \"#f00\",\n    count: 0,\n    playing: true,\n    board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n    player: \"Red\",\n  }\n\n  changeColor = (event) => {\n    if (!event.target.style.backgroundColor && this.state.playing === true) {\n      event.target.style.backgroundColor = this.state.color;\n      if (this.state.color === \"#f00\") {\n        this.setState({ \n          color: \"#0f0\",\n          player: \"Red\" \n        })  \n      } else {\n        this.setState({ \n          color: \"#f00\",\n          player: \"Green\"\n        })\n      }\n      this.setState({ board: this.state.board.map((sq, id) => (id === Number(event.target.id) ? this.state.color : sq))})\n      this.setState({ count: this.state.count + 1 });\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.conditions() || this.state.count === 9) {\n      if (this.conditions()) {\n        alert(`${this.state.player} wins`);\n      } else {\n        alert(\"Tie\");\n      }\n      this.setState({\n        color: \"#f00\",\n        count: 0,\n        playing: false,\n        board: [0, 1, 2, 3, 4, 5, 6, 7, 8],\n        player: \"Red\"\n      })\n    } \n  }\n\n  validation = (num1, num2, num3) => {\n    return this.state.board[num1] === this.state.board[num2] && this.state.board[num2] === this.state.board[num3]\n  }\n  \n  conditions = () => {\n    return (this.validation(0, 1, 2) || this.validation(3, 4, 5) || this.validation(6, 7, 8) ||\n            this.validation(0, 3, 6) || this.validation(1, 4, 7) || this.validation(2, 5, 8) ||\n            this.validation(0, 4, 8) || this.validation(2, 4, 6)                   \n    );\n  }\n\n  isEven = (number) => {\n    return (number % 2 === 0);\n  }\n\n  restart = () => {\n    for (let i = 0; i < 9; i++) {\n      document.getElementById(i).style.backgroundColor = \"\";\n    }\n    this.setState({ \n      playing: true \n    })\n  }\n\n  render() {\n    return (\n      <Content>\n        {\n          this.state.board.map((num, i) => {\n            return (\n              <Square key={i} id={i} changeColor={ this.changeColor }/>\n            )\n          })\n        }\n        <br/>\n        <p>\n          <Button primary={this.state.color} onClick={this.restart}>Restart</Button>\n        </p>\n      </Content>  \n    )\n  }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}