{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/react-section-1-andresochoa91/tictactoe/src/components/Cell.js\";\nimport React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport Square from './Square'; // import { Button } from 'react-bootstrap';\n\nimport Col from './Square'; //Styled components\n\nconst Content = styled.div`\n  ${Col}:hover {\n    background-color: #ccc;\n  }\n  display: flex;\n  flex-wrap: wrap;\n  width: 150px; \n`;\nconst Button = styled.button`\n  background-color: ${props => props.primary};\n  border: none;\n  border-radius: 5px;\n  width: 80px;\n  height: 30px;\n`;\n\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"#f00\",\n      count: 0,\n      playing: true,\n      board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      player: \"Red\"\n    };\n\n    this.changeColor = event => {\n      if (!this.state.board[event.target.id] && this.state.playing === true) {\n        const newBoard = [...this.state.board];\n        newBoard[event.target.id] = this.state.color;\n        this.setState({\n          board: newBoard\n        });\n\n        if (this.state.color === \"#f00\") {\n          this.setState({\n            color: \"#0f0\",\n            player: \"Red\"\n          });\n        } else {\n          this.setState({\n            color: \"#f00\",\n            player: \"Green\"\n          });\n        }\n\n        this.setState({\n          count: this.state.count + 1\n        });\n      }\n    };\n\n    this.validation = (num1, num2, num3) => {\n      return this.state.board[num1] && this.state.board[num1] === this.state.board[num2] && this.state.board[num2] === this.state.board[num3];\n    };\n\n    this.conditions = () => {\n      return this.validation(0, 1, 2) || this.validation(3, 4, 5) || this.validation(6, 7, 8) || this.validation(0, 3, 6) || this.validation(1, 4, 7) || this.validation(2, 5, 8) || this.validation(0, 4, 8) || this.validation(2, 4, 6);\n    };\n\n    this.isEven = number => {\n      return number % 2 === 0;\n    };\n\n    this.restart = () => {\n      for (let i = 0; i < 9; i++) {\n        document.getElementById(i).style.backgroundColor = \"\";\n      }\n\n      this.setState({\n        playing: true,\n        board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if ((this.conditions() || this.state.count === 9) && this.state.playing === true) {\n      if (this.conditions()) {\n        alert(`${this.state.player} wins`);\n      } else {\n        alert(\"Tie\");\n      }\n\n      this.setState({\n        color: \"#f00\",\n        count: 0,\n        playing: false,\n        player: \"Red\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, this.state.board.map((num, i) => /*#__PURE__*/React.createElement(Square, {\n      key: i,\n      id: i,\n      color: num,\n      changeColor: this.changeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      primary: this.state.color,\n      onClick: this.restart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Restart\")));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/react-section-1-andresochoa91/tictactoe/src/components/Cell.js"],"names":["React","Component","styled","Square","Col","Content","div","Button","button","props","primary","Cell","state","color","count","playing","board","player","changeColor","event","target","id","newBoard","setState","validation","num1","num2","num3","conditions","isEven","number","restart","i","document","getElementById","style","backgroundColor","componentDidUpdate","alert","render","map","num"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport Square from './Square';\n// import { Button } from 'react-bootstrap';\nimport Col from './Square';\n\n//Styled components\n\nconst Content= styled.div`\n  ${Col}:hover {\n    background-color: #ccc;\n  }\n  display: flex;\n  flex-wrap: wrap;\n  width: 150px; \n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.primary};\n  border: none;\n  border-radius: 5px;\n  width: 80px;\n  height: 30px;\n`;\n\nclass Cell extends Component {\n  state = {\n    color: \"#f00\",\n    count: 0,\n    playing: true,\n    board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    player: \"Red\",\n  }\n\n  changeColor = (event) => {\n    if (!this.state.board[event.target.id] && this.state.playing === true) {\n      \n      const newBoard = [...this.state.board];\n      newBoard[event.target.id] = this.state.color;\n      this.setState({ board: newBoard });\n\n      if (this.state.color === \"#f00\") {\n        this.setState({ \n          color: \"#0f0\",\n          player: \"Red\" \n        })  \n      } else {\n        this.setState({ \n          color: \"#f00\",\n          player: \"Green\"\n        })\n      }\n      this.setState({ count: this.state.count + 1 });\n    }\n  }\n\n  componentDidUpdate () {\n    if ((this.conditions() || this.state.count === 9) && this.state.playing === true) {\n      if (this.conditions()) {\n        alert(`${this.state.player} wins`);\n      } else {\n        alert(\"Tie\");\n      }\n      this.setState({\n        color: \"#f00\",\n        count: 0,\n        playing: false,\n        player: \"Red\"\n      })\n    } \n  }\n\n  validation = (num1, num2, num3) => {\n    return this.state.board[num1] &&\n           this.state.board[num1] === this.state.board[num2] &&\n           this.state.board[num2] === this.state.board[num3]\n  }\n  \n  conditions = () => {\n    return (this.validation(0, 1, 2) || this.validation(3, 4, 5) || this.validation(6, 7, 8) ||\n            this.validation(0, 3, 6) || this.validation(1, 4, 7) || this.validation(2, 5, 8) ||\n            this.validation(0, 4, 8) || this.validation(2, 4, 6)                   \n    );\n  }\n\n  isEven = (number) => {\n    return (number % 2 === 0);\n  }\n\n  restart = () => {\n    for (let i = 0; i < 9; i++) {\n      document.getElementById(i).style.backgroundColor = \"\";\n    }\n    this.setState({ \n      playing: true,\n      board: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Content>\n          { this.state.board.map((num, i) => <Square key={i} id={i} color={num} changeColor={ this.changeColor }/>) }\n        </Content>  \n        <br/>\n        <p>\n          <Button primary={this.state.color} onClick={this.restart}>Restart</Button>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}